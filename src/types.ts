export type status = 'success' | 'error';

export type RelysiaAuth = {
    statusCode: number;
    data: {
        status: status;
        msg: string;
        token: string;
        refreshToken: string;
    }
}

export type RelysiaUserDetailsUnproccessed = {
    userId: string;
    passwordHash: string;
    passwordUpdatedAt: number;
    validSince: string;
    lastLoginAt: string;
    createdAt: string;
    lastRefreshAt: string;
    photo: string | null;
    displayName: string | null;
    phoneNumber: string | null;
}

export type RelysiaUserDetails = {
    userId: string;
    passwordHash: string;
    passwordUpdatedAt: Date;
    validSince: Date;
    lastLoginAt: Date;
    createdAt: Date;
    lastRefreshAt: Date;
    photo: string | null;
    displayName: string | null;
    phoneNumber: string | null;
}

export type RelysiaBasic<T> = {
    statusCode: number;
    data: T;
}

export type RelysiaUserProfileData = {
    status: status;
    msg: string;
    userDetails: RelysiaUserDetails;
}

/**

 * @param mnemonicPhrase The mnemonic phrase that you wish to use. One will be generated by Relysia if not provided.
 * @param paymail The paymail address prefix. One will be generated by Relysia if not provided.
 * @param paymailActivate I'm honestly not sure what this does.
 * @param type Select the type of wallet. Either Standard or Escrow. Appears both are identical.
 * @param walletLogo The icon that appears in the Relysia logo
 */
export type CreateWalletOpt = {
    mnemonicPhrase?: string;
    paymail?: string;
    paymailActivate?: string;
    type?: string;
    walletLogo?: string;
}

export type RelysiaCreateWallet = {
    status: status;
    msg: string;
    walletId: string;
    paymail: string;
}

export type RelysiaGetAddress = {
    status: status;
    msg: string;
    address: string;
    paymail: string;
}

export type RelysiaGetAllAddress = {
    status: status;
    msg: string;
    addressess: string[];
}

export type RelysiaLeaderboard = {
    status: status;
    msg: string;
    leaderboard: {
        paymail?: string;
        totalAmount: number;
        uid: string;
        rank: number;
        displayName?: string;
    }[];
    nextPageToken: number | null;
}

export type RelysiaWallets = {
    status: status;
    msg: string;
    wallets: {
        walletId: string;
        walletTitle: string;
        walletLogo: string | null;
    }[];
}

export type RelysiaMnemonic = {
    status: status;
    msg: string;
    mnemonic: string;
}