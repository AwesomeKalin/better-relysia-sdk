/** @typedef {'success' | 'error'} status */
export type status = 'success' | 'error';
/**
 * @typedef {Object} RelysiaAuth
 * @property {number} statusCode
 * @property {Object} data
 * @property {status} data.status
 * @property {string} data.msg
 * @property {string} data.token
 * @property {string} data.refreshToken
 */
export type RelysiaAuth = {
    statusCode: number;
    data: {
        status: status;
        msg: string;
        token: string;
        refreshToken: string;
    };
};
/**
 * @typedef {Object} RelysiaUserDetailsUnproccessed
 * @property {string} userId
 * @property {string} passwordHash
 * @property {number} passwordUpdatedAt
 * @property {string} validSince
 * @property {string} lastLoginAt
 * @property {string} createdAt
 * @property {string} lastRefreshAt
 * @property {string | null} photo
 * @property {string | null} displayName
 * @property {string | null} phoneNumber
 */
export type RelysiaUserDetailsUnproccessed = {
    userId: string;
    passwordHash: string;
    passwordUpdatedAt: number;
    validSince: string;
    lastLoginAt: string;
    createdAt: string;
    lastRefreshAt: string;
    photo: string | null;
    displayName: string | null;
    phoneNumber: string | null;
};
/**
 * @typedef {Object} RelysiaUserDetails
 * @property {string} userId
 * @property {string} passwordHash
 * @property {Date} passwordUpdatedAt
 * @property {Date} validSince
 * @property {Date} lastLoginAt
 * @property {Date} createdAt
 * @property {Date} lastRefreshAt
 * @property {string | null} photo
 * @property {string | null} displayName
 * @property {string | null} phoneNumber
 */
export type RelysiaUserDetails = {
    userId: string;
    passwordHash: string;
    passwordUpdatedAt: Date;
    validSince: Date;
    lastLoginAt: Date;
    createdAt: Date;
    lastRefreshAt: Date;
    photo: string | null;
    displayName: string | null;
    phoneNumber: string | null;
};
/**
 * @typedef {Object} RelysiaBasic
 * @property {number} statusCode
 * @property {T} data
 * @template T
 */
export type RelysiaBasic<T> = {
    statusCode: number;
    data: T;
};
/**
 * @typedef {Object} RelysiaUserProfileData
 * @property {status} status
 * @property {string} msg
 * @property {RelysiaUserDetails} userDetails
 */
export type RelysiaUserProfileData = {
    status: status;
    msg: string;
    userDetails: RelysiaUserDetails;
};
/**

 * @param mnemonicPhrase The mnemonic phrase that you wish to use. One will be generated by Relysia if not provided.
 * @param paymail The paymail address prefix. One will be generated by Relysia if not provided.
 * @param paymailActivate I'm honestly not sure what this does.
 * @param type Select the type of wallet. Either Standard or Escrow. Appears both are identical.
 * @param walletLogo The icon that appears in the Relysia logo
 * @typedef {Object} CreateWalletOpt
 * @property {string} [mnemonicPhrase]
 * @property {string} [paymail]
 * @property {string} [paymailActivate]
 * @property {string} [type]
 * @property {string} [walletLogo]
 */
export type CreateWalletOpt = {
    mnemonicPhrase?: string;
    paymail?: string;
    paymailActivate?: string;
    type?: string;
    walletLogo?: string;
};
/**
 * @typedef {Object} RelysiaCreateWallet
 * @property {status} status
 * @property {string} msg
 * @property {string} walletId
 * @property {string} paymail
 */
export type RelysiaCreateWallet = {
    status: status;
    msg: string;
    walletId: string;
    paymail: string;
};
/**
 * @typedef {Object} RelysiaGetAddress
 * @property {status} status
 * @property {string} msg
 * @property {string} address
 * @property {string} paymail
 */
export type RelysiaGetAddress = {
    status: status;
    msg: string;
    address: string;
    paymail: string;
};
/**
 * @typedef {Object} RelysiaGetAllAddress
 * @property {status} status
 * @property {string} msg
 * @property {string[]} addressess
 */
export type RelysiaGetAllAddress = {
    status: status;
    msg: string;
    addressess: string[];
};
/**
 * @typedef {Object} RelysiaLeaderboard
 * @property {status} status
 * @property {string} msg
 * @property {{
        paymail?: string;
        totalAmount: number;
        uid: string;
        rank: number;
        displayName?: string;
    }[]} leaderboard
 * @property {number | null} nextPageToken
 */
export type RelysiaLeaderboard = {
    status: status;
    msg: string;
    leaderboard: {
        paymail?: string;
        totalAmount: number;
        uid: string;
        rank: number;
        displayName?: string;
    }[];
    nextPageToken: number | null;
};
/**
 * @typedef {Object} RelysiaWallets
 * @property {status} status
 * @property {string} msg
 * @property {{
        walletId: string;
        walletTitle: string;
        walletLogo: string | null;
    }[]} wallets
 */
export type RelysiaWallets = {
    status: status;
    msg: string;
    wallets: {
        walletId: string;
        walletTitle: string;
        walletLogo: string | null;
    }[];
};
/**
 * @typedef {Object} RelysiaMnemonic
 * @property {status} status
 * @property {string} msg
 * @property {string} mnemonic
 */
export type RelysiaMnemonic = {
    status: status;
    msg: string;
    mnemonic: string;
};
